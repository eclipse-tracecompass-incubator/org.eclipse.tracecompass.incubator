/*
 * Trace Server Protocol
 * Open source REST API for viewing and analyzing any type of logs or traces. Its goal is to provide models to populate views, graphs, metrics, and more to help extract useful information from traces, in a way that is more user-friendly and informative than huge text dumps.
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: tracecompass-dev@eclipse.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.eclipse.tracecompass.incubator.tsp.client.core.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.eclipse.tracecompass.incubator.tsp.client.core.model.Element;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.eclipse.tracecompass.incubator.tsp.client.core.JSON;


/**
 * TooltipParameters
 */
@JsonPropertyOrder({
  TooltipParameters.JSON_PROPERTY_REQUESTED_ELEMENT,
  TooltipParameters.JSON_PROPERTY_REQUESTED_ITEMS,
  TooltipParameters.JSON_PROPERTY_REQUESTED_TIMES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.15.0")
public class TooltipParameters {
  public static final String JSON_PROPERTY_REQUESTED_ELEMENT = "requested_element";
  @javax.annotation.Nonnull
  private Element requestedElement;

  public static final String JSON_PROPERTY_REQUESTED_ITEMS = "requested_items";
  @javax.annotation.Nonnull
  private List<Integer> requestedItems = new ArrayList<>();

  public static final String JSON_PROPERTY_REQUESTED_TIMES = "requested_times";
  @javax.annotation.Nonnull
  private List<Long> requestedTimes = new ArrayList<>();

  public TooltipParameters() { 
  }

  public TooltipParameters requestedElement(@javax.annotation.Nonnull Element requestedElement) {
    this.requestedElement = requestedElement;
    return this;
  }

  /**
   * Get requestedElement
   * @return requestedElement
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REQUESTED_ELEMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Element getRequestedElement() {
    return requestedElement;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTED_ELEMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestedElement(@javax.annotation.Nonnull Element requestedElement) {
    this.requestedElement = requestedElement;
  }


  public TooltipParameters requestedItems(@javax.annotation.Nonnull List<Integer> requestedItems) {
    this.requestedItems = requestedItems;
    return this;
  }

  public TooltipParameters addRequestedItemsItem(Integer requestedItemsItem) {
    if (this.requestedItems == null) {
      this.requestedItems = new ArrayList<>();
    }
    this.requestedItems.add(requestedItemsItem);
    return this;
  }

  /**
   * Get requestedItems
   * @return requestedItems
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REQUESTED_ITEMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Integer> getRequestedItems() {
    return requestedItems;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTED_ITEMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestedItems(@javax.annotation.Nonnull List<Integer> requestedItems) {
    this.requestedItems = requestedItems;
  }


  public TooltipParameters requestedTimes(@javax.annotation.Nonnull List<Long> requestedTimes) {
    this.requestedTimes = requestedTimes;
    return this;
  }

  public TooltipParameters addRequestedTimesItem(Long requestedTimesItem) {
    if (this.requestedTimes == null) {
      this.requestedTimes = new ArrayList<>();
    }
    this.requestedTimes.add(requestedTimesItem);
    return this;
  }

  /**
   * Get requestedTimes
   * @return requestedTimes
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REQUESTED_TIMES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Long> getRequestedTimes() {
    return requestedTimes;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTED_TIMES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestedTimes(@javax.annotation.Nonnull List<Long> requestedTimes) {
    this.requestedTimes = requestedTimes;
  }


  /**
   * Return true if this TooltipParameters object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TooltipParameters tooltipParameters = (TooltipParameters) o;
    return Objects.equals(this.requestedElement, tooltipParameters.requestedElement) &&
        Objects.equals(this.requestedItems, tooltipParameters.requestedItems) &&
        Objects.equals(this.requestedTimes, tooltipParameters.requestedTimes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestedElement, requestedItems, requestedTimes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TooltipParameters {\n");
    sb.append("    requestedElement: ").append(toIndentedString(requestedElement)).append("\n");
    sb.append("    requestedItems: ").append(toIndentedString(requestedItems)).append("\n");
    sb.append("    requestedTimes: ").append(toIndentedString(requestedTimes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

