/*
 * Trace Server Protocol
 * Open source REST API for viewing and analyzing any type of logs or traces. Its goal is to provide models to populate views, graphs, metrics, and more to help extract useful information from traces, in a way that is more user-friendly and informative than huge text dumps.
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: tracecompass-dev@eclipse.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.eclipse.tracecompass.incubator.tsp.client.core.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.eclipse.tracecompass.incubator.tsp.client.core.JSON;


/**
 * Model returned by outputs that contains annotation categories available for this output
 */
@JsonPropertyOrder({
  AnnotationCategoriesModel.JSON_PROPERTY_ANNOTATION_CATEGORIES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.15.0")
public class AnnotationCategoriesModel {
  public static final String JSON_PROPERTY_ANNOTATION_CATEGORIES = "annotationCategories";
  @javax.annotation.Nonnull
  private List<String> annotationCategories = new ArrayList<>();

  public AnnotationCategoriesModel() { 
  }

  public AnnotationCategoriesModel annotationCategories(@javax.annotation.Nonnull List<String> annotationCategories) {
    this.annotationCategories = annotationCategories;
    return this;
  }

  public AnnotationCategoriesModel addAnnotationCategoriesItem(String annotationCategoriesItem) {
    if (this.annotationCategories == null) {
      this.annotationCategories = new ArrayList<>();
    }
    this.annotationCategories.add(annotationCategoriesItem);
    return this;
  }

  /**
   * Array of all the categories
   * @return annotationCategories
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ANNOTATION_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getAnnotationCategories() {
    return annotationCategories;
  }


  @JsonProperty(JSON_PROPERTY_ANNOTATION_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAnnotationCategories(@javax.annotation.Nonnull List<String> annotationCategories) {
    this.annotationCategories = annotationCategories;
  }


  /**
   * Return true if this AnnotationCategoriesModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnnotationCategoriesModel annotationCategoriesModel = (AnnotationCategoriesModel) o;
    return Objects.equals(this.annotationCategories, annotationCategoriesModel.annotationCategories);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotationCategories);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnnotationCategoriesModel {\n");
    sb.append("    annotationCategories: ").append(toIndentedString(annotationCategories)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

