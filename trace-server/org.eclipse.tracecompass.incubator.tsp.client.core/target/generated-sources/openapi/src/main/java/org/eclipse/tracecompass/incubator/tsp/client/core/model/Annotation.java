/*
 * Trace Server Protocol
 * Open source REST API for viewing and analyzing any type of logs or traces. Its goal is to provide models to populate views, graphs, metrics, and more to help extract useful information from traces, in a way that is more user-friendly and informative than huge text dumps.
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: tracecompass-dev@eclipse.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.eclipse.tracecompass.incubator.tsp.client.core.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.eclipse.tracecompass.incubator.tsp.client.core.model.OutputElementStyle;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.eclipse.tracecompass.incubator.tsp.client.core.JSON;


/**
 * An annotation is used to mark an interesting area at a given time or time range
 */
@JsonPropertyOrder({
  Annotation.JSON_PROPERTY_ENTRY_ID,
  Annotation.JSON_PROPERTY_STYLE,
  Annotation.JSON_PROPERTY_LABEL,
  Annotation.JSON_PROPERTY_TYPE,
  Annotation.JSON_PROPERTY_TIME,
  Annotation.JSON_PROPERTY_DURATION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.15.0")
public class Annotation {
  public static final String JSON_PROPERTY_ENTRY_ID = "entryId";
  @javax.annotation.Nonnull
  private Long entryId;

  public static final String JSON_PROPERTY_STYLE = "style";
  @javax.annotation.Nullable
  private OutputElementStyle style;

  public static final String JSON_PROPERTY_LABEL = "label";
  @javax.annotation.Nullable
  private String label;

  /**
   * Type of annotation indicating its location
   */
  public enum TypeEnum {
    CHART(String.valueOf("CHART")),
    
    TREE(String.valueOf("TREE"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nonnull
  private TypeEnum type;

  public static final String JSON_PROPERTY_TIME = "time";
  @javax.annotation.Nonnull
  private Long time;

  public static final String JSON_PROPERTY_DURATION = "duration";
  @javax.annotation.Nonnull
  private Long duration;

  public Annotation() { 
  }

  public Annotation entryId(@javax.annotation.Nonnull Long entryId) {
    this.entryId = entryId;
    return this;
  }

  /**
   * Entry&#39;s unique ID or -1 if annotation not associated with an entry
   * @return entryId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENTRY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getEntryId() {
    return entryId;
  }


  @JsonProperty(JSON_PROPERTY_ENTRY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntryId(@javax.annotation.Nonnull Long entryId) {
    this.entryId = entryId;
  }


  public Annotation style(@javax.annotation.Nullable OutputElementStyle style) {
    this.style = style;
    return this;
  }

  /**
   * Get style
   * @return style
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OutputElementStyle getStyle() {
    return style;
  }


  @JsonProperty(JSON_PROPERTY_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStyle(@javax.annotation.Nullable OutputElementStyle style) {
    this.style = style;
  }


  public Annotation label(@javax.annotation.Nullable String label) {
    this.label = label;
    return this;
  }

  /**
   * Text label of this annotation
   * @return label
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(@javax.annotation.Nullable String label) {
    this.label = label;
  }


  public Annotation type(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Type of annotation indicating its location
   * @return type
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
  }


  public Annotation time(@javax.annotation.Nonnull Long time) {
    this.time = time;
    return this;
  }

  /**
   * Time of this annotation
   * @return time
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTime() {
    return time;
  }


  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTime(@javax.annotation.Nonnull Long time) {
    this.time = time;
  }


  public Annotation duration(@javax.annotation.Nonnull Long duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Duration of this annotation
   * @return duration
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getDuration() {
    return duration;
  }


  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDuration(@javax.annotation.Nonnull Long duration) {
    this.duration = duration;
  }


  /**
   * Return true if this Annotation object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Annotation annotation = (Annotation) o;
    return Objects.equals(this.entryId, annotation.entryId) &&
        Objects.equals(this.style, annotation.style) &&
        Objects.equals(this.label, annotation.label) &&
        Objects.equals(this.type, annotation.type) &&
        Objects.equals(this.time, annotation.time) &&
        Objects.equals(this.duration, annotation.duration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entryId, style, label, type, time, duration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Annotation {\n");
    sb.append("    entryId: ").append(toIndentedString(entryId)).append("\n");
    sb.append("    style: ").append(toIndentedString(style)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

