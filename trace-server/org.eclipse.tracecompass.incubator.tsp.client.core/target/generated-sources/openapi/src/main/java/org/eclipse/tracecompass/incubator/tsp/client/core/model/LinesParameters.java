/*
 * Trace Server Protocol
 * Open source REST API for viewing and analyzing any type of logs or traces. Its goal is to provide models to populate views, graphs, metrics, and more to help extract useful information from traces, in a way that is more user-friendly and informative than huge text dumps.
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: tracecompass-dev@eclipse.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.eclipse.tracecompass.incubator.tsp.client.core.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.eclipse.tracecompass.incubator.tsp.client.core.JSON;


/**
 * LinesParameters
 */
@JsonPropertyOrder({
  LinesParameters.JSON_PROPERTY_REQUESTED_TABLE_INDEX,
  LinesParameters.JSON_PROPERTY_REQUESTED_TIMES,
  LinesParameters.JSON_PROPERTY_REQUESTED_TABLE_COUNT,
  LinesParameters.JSON_PROPERTY_REQUESTED_TABLE_COLUMN_IDS,
  LinesParameters.JSON_PROPERTY_TABLE_SEARCH_EXPRESSIONS,
  LinesParameters.JSON_PROPERTY_TABLE_SEARCH_DIRECTION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.15.0")
public class LinesParameters {
  public static final String JSON_PROPERTY_REQUESTED_TABLE_INDEX = "requested_table_index";
  @javax.annotation.Nullable
  private Long requestedTableIndex;

  public static final String JSON_PROPERTY_REQUESTED_TIMES = "requested_times";
  @javax.annotation.Nullable
  private List<Long> requestedTimes = new ArrayList<>();

  public static final String JSON_PROPERTY_REQUESTED_TABLE_COUNT = "requested_table_count";
  @javax.annotation.Nonnull
  private Integer requestedTableCount;

  public static final String JSON_PROPERTY_REQUESTED_TABLE_COLUMN_IDS = "requested_table_column_ids";
  @javax.annotation.Nullable
  private List<Long> requestedTableColumnIds = new ArrayList<>();

  public static final String JSON_PROPERTY_TABLE_SEARCH_EXPRESSIONS = "table_search_expressions";
  @javax.annotation.Nullable
  private Map<String, String> tableSearchExpressions = new HashMap<>();

  /**
   * Search next or previous item (e.g. event, state etc.)
   */
  public enum TableSearchDirectionEnum {
    NEXT(String.valueOf("NEXT")),
    
    PREVIOUS(String.valueOf("PREVIOUS"));

    private String value;

    TableSearchDirectionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TableSearchDirectionEnum fromValue(String value) {
      for (TableSearchDirectionEnum b : TableSearchDirectionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TABLE_SEARCH_DIRECTION = "table_search_direction";
  @javax.annotation.Nullable
  private TableSearchDirectionEnum tableSearchDirection;

  public LinesParameters() { 
  }

  public LinesParameters requestedTableIndex(@javax.annotation.Nullable Long requestedTableIndex) {
    this.requestedTableIndex = requestedTableIndex;
    return this;
  }

  /**
   * Get requestedTableIndex
   * @return requestedTableIndex
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUESTED_TABLE_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getRequestedTableIndex() {
    return requestedTableIndex;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTED_TABLE_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestedTableIndex(@javax.annotation.Nullable Long requestedTableIndex) {
    this.requestedTableIndex = requestedTableIndex;
  }


  public LinesParameters requestedTimes(@javax.annotation.Nullable List<Long> requestedTimes) {
    this.requestedTimes = requestedTimes;
    return this;
  }

  public LinesParameters addRequestedTimesItem(Long requestedTimesItem) {
    if (this.requestedTimes == null) {
      this.requestedTimes = new ArrayList<>();
    }
    this.requestedTimes.add(requestedTimesItem);
    return this;
  }

  /**
   * Get requestedTimes
   * @return requestedTimes
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUESTED_TIMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Long> getRequestedTimes() {
    return requestedTimes;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTED_TIMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestedTimes(@javax.annotation.Nullable List<Long> requestedTimes) {
    this.requestedTimes = requestedTimes;
  }


  public LinesParameters requestedTableCount(@javax.annotation.Nonnull Integer requestedTableCount) {
    this.requestedTableCount = requestedTableCount;
    return this;
  }

  /**
   * Get requestedTableCount
   * @return requestedTableCount
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REQUESTED_TABLE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRequestedTableCount() {
    return requestedTableCount;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTED_TABLE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestedTableCount(@javax.annotation.Nonnull Integer requestedTableCount) {
    this.requestedTableCount = requestedTableCount;
  }


  public LinesParameters requestedTableColumnIds(@javax.annotation.Nullable List<Long> requestedTableColumnIds) {
    this.requestedTableColumnIds = requestedTableColumnIds;
    return this;
  }

  public LinesParameters addRequestedTableColumnIdsItem(Long requestedTableColumnIdsItem) {
    if (this.requestedTableColumnIds == null) {
      this.requestedTableColumnIds = new ArrayList<>();
    }
    this.requestedTableColumnIds.add(requestedTableColumnIdsItem);
    return this;
  }

  /**
   * Get requestedTableColumnIds
   * @return requestedTableColumnIds
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUESTED_TABLE_COLUMN_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Long> getRequestedTableColumnIds() {
    return requestedTableColumnIds;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTED_TABLE_COLUMN_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestedTableColumnIds(@javax.annotation.Nullable List<Long> requestedTableColumnIds) {
    this.requestedTableColumnIds = requestedTableColumnIds;
  }


  public LinesParameters tableSearchExpressions(@javax.annotation.Nullable Map<String, String> tableSearchExpressions) {
    this.tableSearchExpressions = tableSearchExpressions;
    return this;
  }

  public LinesParameters putTableSearchExpressionsItem(String key, String tableSearchExpressionsItem) {
    if (this.tableSearchExpressions == null) {
      this.tableSearchExpressions = new HashMap<>();
    }
    this.tableSearchExpressions.put(key, tableSearchExpressionsItem);
    return this;
  }

  /**
   * Get tableSearchExpressions
   * @return tableSearchExpressions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TABLE_SEARCH_EXPRESSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getTableSearchExpressions() {
    return tableSearchExpressions;
  }


  @JsonProperty(JSON_PROPERTY_TABLE_SEARCH_EXPRESSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTableSearchExpressions(@javax.annotation.Nullable Map<String, String> tableSearchExpressions) {
    this.tableSearchExpressions = tableSearchExpressions;
  }


  public LinesParameters tableSearchDirection(@javax.annotation.Nullable TableSearchDirectionEnum tableSearchDirection) {
    this.tableSearchDirection = tableSearchDirection;
    return this;
  }

  /**
   * Search next or previous item (e.g. event, state etc.)
   * @return tableSearchDirection
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TABLE_SEARCH_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TableSearchDirectionEnum getTableSearchDirection() {
    return tableSearchDirection;
  }


  @JsonProperty(JSON_PROPERTY_TABLE_SEARCH_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTableSearchDirection(@javax.annotation.Nullable TableSearchDirectionEnum tableSearchDirection) {
    this.tableSearchDirection = tableSearchDirection;
  }


  /**
   * Return true if this LinesParameters object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinesParameters linesParameters = (LinesParameters) o;
    return Objects.equals(this.requestedTableIndex, linesParameters.requestedTableIndex) &&
        Objects.equals(this.requestedTimes, linesParameters.requestedTimes) &&
        Objects.equals(this.requestedTableCount, linesParameters.requestedTableCount) &&
        Objects.equals(this.requestedTableColumnIds, linesParameters.requestedTableColumnIds) &&
        Objects.equals(this.tableSearchExpressions, linesParameters.tableSearchExpressions) &&
        Objects.equals(this.tableSearchDirection, linesParameters.tableSearchDirection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestedTableIndex, requestedTimes, requestedTableCount, requestedTableColumnIds, tableSearchExpressions, tableSearchDirection);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LinesParameters {\n");
    sb.append("    requestedTableIndex: ").append(toIndentedString(requestedTableIndex)).append("\n");
    sb.append("    requestedTimes: ").append(toIndentedString(requestedTimes)).append("\n");
    sb.append("    requestedTableCount: ").append(toIndentedString(requestedTableCount)).append("\n");
    sb.append("    requestedTableColumnIds: ").append(toIndentedString(requestedTableColumnIds)).append("\n");
    sb.append("    tableSearchExpressions: ").append(toIndentedString(tableSearchExpressions)).append("\n");
    sb.append("    tableSearchDirection: ").append(toIndentedString(tableSearchDirection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

