/*
 * Trace Server Protocol
 * Open source REST API for viewing and analyzing any type of logs or traces. Its goal is to provide models to populate views, graphs, metrics, and more to help extract useful information from traces, in a way that is more user-friendly and informative than huge text dumps.
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: tracecompass-dev@eclipse.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.eclipse.tracecompass.incubator.tsp.client.core.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.eclipse.tracecompass.incubator.tsp.client.core.JSON;


/**
 * A generic time range with optional sampling count. Sampling points may represent values other than timestamps.
 */
@JsonPropertyOrder({
  GenericTimeRange.JSON_PROPERTY_END,
  GenericTimeRange.JSON_PROPERTY_NB_SAMPLES,
  GenericTimeRange.JSON_PROPERTY_START
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.15.0")
public class GenericTimeRange {
  public static final String JSON_PROPERTY_END = "end";
  @javax.annotation.Nonnull
  private Long end;

  public static final String JSON_PROPERTY_NB_SAMPLES = "nbSamples";
  @javax.annotation.Nullable
  private Integer nbSamples;

  public static final String JSON_PROPERTY_START = "start";
  @javax.annotation.Nonnull
  private Long start;

  public GenericTimeRange() { 
  }

  public GenericTimeRange end(@javax.annotation.Nonnull Long end) {
    this.end = end;
    return this;
  }

  /**
   * End of the range
   * @return end
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getEnd() {
    return end;
  }


  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnd(@javax.annotation.Nonnull Long end) {
    this.end = end;
  }


  public GenericTimeRange nbSamples(@javax.annotation.Nullable Integer nbSamples) {
    this.nbSamples = nbSamples;
    return this;
  }

  /**
   * Optional number of samples (1â€“65536) to generate within the range
   * @return nbSamples
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NB_SAMPLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNbSamples() {
    return nbSamples;
  }


  @JsonProperty(JSON_PROPERTY_NB_SAMPLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNbSamples(@javax.annotation.Nullable Integer nbSamples) {
    this.nbSamples = nbSamples;
  }


  public GenericTimeRange start(@javax.annotation.Nonnull Long start) {
    this.start = start;
    return this;
  }

  /**
   * Start of the range
   * @return start
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getStart() {
    return start;
  }


  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStart(@javax.annotation.Nonnull Long start) {
    this.start = start;
  }


  /**
   * Return true if this GenericTimeRange object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenericTimeRange genericTimeRange = (GenericTimeRange) o;
    return Objects.equals(this.end, genericTimeRange.end) &&
        Objects.equals(this.nbSamples, genericTimeRange.nbSamples) &&
        Objects.equals(this.start, genericTimeRange.start);
  }

  @Override
  public int hashCode() {
    return Objects.hash(end, nbSamples, start);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenericTimeRange {\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    nbSamples: ").append(toIndentedString(nbSamples)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

