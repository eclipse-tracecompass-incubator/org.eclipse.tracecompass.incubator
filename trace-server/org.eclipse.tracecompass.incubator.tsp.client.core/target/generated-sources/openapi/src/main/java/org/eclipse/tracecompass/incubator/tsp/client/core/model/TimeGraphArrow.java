/*
 * Trace Server Protocol
 * Open source REST API for viewing and analyzing any type of logs or traces. Its goal is to provide models to populate views, graphs, metrics, and more to help extract useful information from traces, in a way that is more user-friendly and informative than huge text dumps.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: tracecompass-dev@eclipse.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.eclipse.tracecompass.incubator.tsp.client.core.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.eclipse.tracecompass.incubator.tsp.client.core.model.OutputElementStyle;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.eclipse.tracecompass.incubator.tsp.client.core.JSON;


/**
 * TimeGraphArrow
 */
@JsonPropertyOrder({
  TimeGraphArrow.JSON_PROPERTY_TARGET_ID,
  TimeGraphArrow.JSON_PROPERTY_END,
  TimeGraphArrow.JSON_PROPERTY_STYLE,
  TimeGraphArrow.JSON_PROPERTY_SOURCE_ID,
  TimeGraphArrow.JSON_PROPERTY_START
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-19T10:33:13.979273368-04:00[America/Toronto]", comments = "Generator version: 7.15.0")
public class TimeGraphArrow {
  public static final String JSON_PROPERTY_TARGET_ID = "targetId";
  @javax.annotation.Nonnull
  private Long targetId;

  public static final String JSON_PROPERTY_END = "end";
  @javax.annotation.Nonnull
  private Long end;

  public static final String JSON_PROPERTY_STYLE = "style";
  @javax.annotation.Nullable
  private OutputElementStyle style;

  public static final String JSON_PROPERTY_SOURCE_ID = "sourceId";
  @javax.annotation.Nonnull
  private Long sourceId;

  public static final String JSON_PROPERTY_START = "start";
  @javax.annotation.Nonnull
  private Long start;

  public TimeGraphArrow() { 
  }

  public TimeGraphArrow targetId(@javax.annotation.Nonnull Long targetId) {
    this.targetId = targetId;
    return this;
  }

  /**
   * Target entry&#39;s unique ID
   * @return targetId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TARGET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTargetId() {
    return targetId;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTargetId(@javax.annotation.Nonnull Long targetId) {
    this.targetId = targetId;
  }


  public TimeGraphArrow end(@javax.annotation.Nonnull Long end) {
    this.end = end;
    return this;
  }

  /**
   * End time for this arrow
   * @return end
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getEnd() {
    return end;
  }


  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnd(@javax.annotation.Nonnull Long end) {
    this.end = end;
  }


  public TimeGraphArrow style(@javax.annotation.Nullable OutputElementStyle style) {
    this.style = style;
    return this;
  }

  /**
   * Get style
   * @return style
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OutputElementStyle getStyle() {
    return style;
  }


  @JsonProperty(JSON_PROPERTY_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStyle(@javax.annotation.Nullable OutputElementStyle style) {
    this.style = style;
  }


  public TimeGraphArrow sourceId(@javax.annotation.Nonnull Long sourceId) {
    this.sourceId = sourceId;
    return this;
  }

  /**
   * Source entry&#39;s unique ID
   * @return sourceId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getSourceId() {
    return sourceId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSourceId(@javax.annotation.Nonnull Long sourceId) {
    this.sourceId = sourceId;
  }


  public TimeGraphArrow start(@javax.annotation.Nonnull Long start) {
    this.start = start;
    return this;
  }

  /**
   * Start time for this arrow
   * @return start
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getStart() {
    return start;
  }


  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStart(@javax.annotation.Nonnull Long start) {
    this.start = start;
  }


  /**
   * Return true if this TimeGraphArrow object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeGraphArrow timeGraphArrow = (TimeGraphArrow) o;
    return Objects.equals(this.targetId, timeGraphArrow.targetId) &&
        Objects.equals(this.end, timeGraphArrow.end) &&
        Objects.equals(this.style, timeGraphArrow.style) &&
        Objects.equals(this.sourceId, timeGraphArrow.sourceId) &&
        Objects.equals(this.start, timeGraphArrow.start);
  }

  @Override
  public int hashCode() {
    return Objects.hash(targetId, end, style, sourceId, start);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeGraphArrow {\n");
    sb.append("    targetId: ").append(toIndentedString(targetId)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    style: ").append(toIndentedString(style)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

