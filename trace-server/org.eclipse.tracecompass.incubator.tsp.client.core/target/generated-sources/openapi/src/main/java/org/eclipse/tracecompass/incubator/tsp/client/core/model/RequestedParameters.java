/*
 * Trace Server Protocol
 * Open source REST API for viewing and analyzing any type of logs or traces. Its goal is to provide models to populate views, graphs, metrics, and more to help extract useful information from traces, in a way that is more user-friendly and informative than huge text dumps.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: tracecompass-dev@eclipse.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.eclipse.tracecompass.incubator.tsp.client.core.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.eclipse.tracecompass.incubator.tsp.client.core.model.RequestedFilterQueryParameters;
import org.eclipse.tracecompass.incubator.tsp.client.core.model.TimeRange;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.eclipse.tracecompass.incubator.tsp.client.core.JSON;


/**
 * RequestedParameters
 */
@JsonPropertyOrder({
  RequestedParameters.JSON_PROPERTY_FILTER_QUERY_PARAMETERS,
  RequestedParameters.JSON_PROPERTY_REQUESTED_TIMERANGE,
  RequestedParameters.JSON_PROPERTY_REQUESTED_ITEMS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-19T10:33:13.979273368-04:00[America/Toronto]", comments = "Generator version: 7.15.0")
public class RequestedParameters {
  public static final String JSON_PROPERTY_FILTER_QUERY_PARAMETERS = "filter_query_parameters";
  @javax.annotation.Nullable
  private RequestedFilterQueryParameters filterQueryParameters;

  public static final String JSON_PROPERTY_REQUESTED_TIMERANGE = "requested_timerange";
  @javax.annotation.Nonnull
  private TimeRange requestedTimerange;

  public static final String JSON_PROPERTY_REQUESTED_ITEMS = "requested_items";
  @javax.annotation.Nonnull
  private List<Integer> requestedItems = new ArrayList<>();

  public RequestedParameters() { 
  }

  public RequestedParameters filterQueryParameters(@javax.annotation.Nullable RequestedFilterQueryParameters filterQueryParameters) {
    this.filterQueryParameters = filterQueryParameters;
    return this;
  }

  /**
   * Get filterQueryParameters
   * @return filterQueryParameters
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILTER_QUERY_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RequestedFilterQueryParameters getFilterQueryParameters() {
    return filterQueryParameters;
  }


  @JsonProperty(JSON_PROPERTY_FILTER_QUERY_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilterQueryParameters(@javax.annotation.Nullable RequestedFilterQueryParameters filterQueryParameters) {
    this.filterQueryParameters = filterQueryParameters;
  }


  public RequestedParameters requestedTimerange(@javax.annotation.Nonnull TimeRange requestedTimerange) {
    this.requestedTimerange = requestedTimerange;
    return this;
  }

  /**
   * Get requestedTimerange
   * @return requestedTimerange
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REQUESTED_TIMERANGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TimeRange getRequestedTimerange() {
    return requestedTimerange;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTED_TIMERANGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestedTimerange(@javax.annotation.Nonnull TimeRange requestedTimerange) {
    this.requestedTimerange = requestedTimerange;
  }


  public RequestedParameters requestedItems(@javax.annotation.Nonnull List<Integer> requestedItems) {
    this.requestedItems = requestedItems;
    return this;
  }

  public RequestedParameters addRequestedItemsItem(Integer requestedItemsItem) {
    if (this.requestedItems == null) {
      this.requestedItems = new ArrayList<>();
    }
    this.requestedItems.add(requestedItemsItem);
    return this;
  }

  /**
   * Get requestedItems
   * @return requestedItems
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REQUESTED_ITEMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Integer> getRequestedItems() {
    return requestedItems;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTED_ITEMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestedItems(@javax.annotation.Nonnull List<Integer> requestedItems) {
    this.requestedItems = requestedItems;
  }


  /**
   * Return true if this RequestedParameters object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestedParameters requestedParameters = (RequestedParameters) o;
    return Objects.equals(this.filterQueryParameters, requestedParameters.filterQueryParameters) &&
        Objects.equals(this.requestedTimerange, requestedParameters.requestedTimerange) &&
        Objects.equals(this.requestedItems, requestedParameters.requestedItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filterQueryParameters, requestedTimerange, requestedItems);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestedParameters {\n");
    sb.append("    filterQueryParameters: ").append(toIndentedString(filterQueryParameters)).append("\n");
    sb.append("    requestedTimerange: ").append(toIndentedString(requestedTimerange)).append("\n");
    sb.append("    requestedItems: ").append(toIndentedString(requestedItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

