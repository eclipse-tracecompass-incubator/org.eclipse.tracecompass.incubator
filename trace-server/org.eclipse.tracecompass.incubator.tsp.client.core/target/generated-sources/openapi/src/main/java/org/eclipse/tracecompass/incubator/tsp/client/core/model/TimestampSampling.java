/*
 * Trace Server Protocol
 * Open source REST API for viewing and analyzing any type of logs or traces. Its goal is to provide models to populate views, graphs, metrics, and more to help extract useful information from traces, in a way that is more user-friendly and informative than huge text dumps.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: tracecompass-dev@eclipse.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.eclipse.tracecompass.incubator.tsp.client.core.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.eclipse.tracecompass.incubator.tsp.client.core.JSON;


/**
 * TimestampSampling
 */
@JsonPropertyOrder({
  TimestampSampling.JSON_PROPERTY_SAMPLING
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-19T10:33:13.979273368-04:00[America/Toronto]", comments = "Generator version: 7.15.0")
public class TimestampSampling {
  public static final String JSON_PROPERTY_SAMPLING = "sampling";
  @javax.annotation.Nonnull
  private List<Long> sampling = new ArrayList<>();

  public TimestampSampling() { 
  }

  public TimestampSampling sampling(@javax.annotation.Nonnull List<Long> sampling) {
    this.sampling = sampling;
    return this;
  }

  public TimestampSampling addSamplingItem(Long samplingItem) {
    if (this.sampling == null) {
      this.sampling = new ArrayList<>();
    }
    this.sampling.add(samplingItem);
    return this;
  }

  /**
   * Sampling as list of timestamps
   * @return sampling
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SAMPLING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Long> getSampling() {
    return sampling;
  }


  @JsonProperty(JSON_PROPERTY_SAMPLING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSampling(@javax.annotation.Nonnull List<Long> sampling) {
    this.sampling = sampling;
  }


  /**
   * Return true if this TimestampSampling object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimestampSampling timestampSampling = (TimestampSampling) o;
    return Objects.equals(this.sampling, timestampSampling.sampling);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sampling);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimestampSampling {\n");
    sb.append("    sampling: ").append(toIndentedString(sampling)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

