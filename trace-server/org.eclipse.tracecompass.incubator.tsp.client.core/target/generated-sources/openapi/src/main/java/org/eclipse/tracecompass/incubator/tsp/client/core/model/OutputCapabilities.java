/*
 * Trace Server Protocol
 * Open source REST API for viewing and analyzing any type of logs or traces. Its goal is to provide models to populate views, graphs, metrics, and more to help extract useful information from traces, in a way that is more user-friendly and informative than huge text dumps.
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: tracecompass-dev@eclipse.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.eclipse.tracecompass.incubator.tsp.client.core.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.eclipse.tracecompass.incubator.tsp.client.core.JSON;


/**
 * Optional output capabilities, such as &#39;canCreate&#39; and &#39;canDelete&#39;. If absent, all capabilities are &#39;false&#39;.
 */
@JsonPropertyOrder({
  OutputCapabilities.JSON_PROPERTY_CAN_DELETE,
  OutputCapabilities.JSON_PROPERTY_CAN_CREATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.15.0")
public class OutputCapabilities {
  public static final String JSON_PROPERTY_CAN_DELETE = "canDelete";
  @javax.annotation.Nullable
  private Boolean canDelete;

  public static final String JSON_PROPERTY_CAN_CREATE = "canCreate";
  @javax.annotation.Nullable
  private Boolean canCreate;

  public OutputCapabilities() { 
  }

  public OutputCapabilities canDelete(@javax.annotation.Nullable Boolean canDelete) {
    this.canDelete = canDelete;
    return this;
  }

  /**
   * Optional, whether this output (data provider) can be deleted. &#39;false&#39; if absent.
   * @return canDelete
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAN_DELETE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCanDelete() {
    return canDelete;
  }


  @JsonProperty(JSON_PROPERTY_CAN_DELETE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanDelete(@javax.annotation.Nullable Boolean canDelete) {
    this.canDelete = canDelete;
  }


  public OutputCapabilities canCreate(@javax.annotation.Nullable Boolean canCreate) {
    this.canCreate = canCreate;
    return this;
  }

  /**
   * Optional, whether this output (data provider) can create derived outputs (data providers). &#39;false&#39; if absent.
   * @return canCreate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAN_CREATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCanCreate() {
    return canCreate;
  }


  @JsonProperty(JSON_PROPERTY_CAN_CREATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanCreate(@javax.annotation.Nullable Boolean canCreate) {
    this.canCreate = canCreate;
  }


  /**
   * Return true if this OutputCapabilities object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutputCapabilities outputCapabilities = (OutputCapabilities) o;
    return Objects.equals(this.canDelete, outputCapabilities.canDelete) &&
        Objects.equals(this.canCreate, outputCapabilities.canCreate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canDelete, canCreate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutputCapabilities {\n");
    sb.append("    canDelete: ").append(toIndentedString(canDelete)).append("\n");
    sb.append("    canCreate: ").append(toIndentedString(canCreate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

