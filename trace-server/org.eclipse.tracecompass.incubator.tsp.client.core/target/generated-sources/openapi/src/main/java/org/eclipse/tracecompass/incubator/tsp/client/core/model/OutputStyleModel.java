/*
 * Trace Server Protocol
 * Open source REST API for viewing and analyzing any type of logs or traces. Its goal is to provide models to populate views, graphs, metrics, and more to help extract useful information from traces, in a way that is more user-friendly and informative than huge text dumps.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: tracecompass-dev@eclipse.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.eclipse.tracecompass.incubator.tsp.client.core.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.tracecompass.incubator.tsp.client.core.model.OutputElementStyle;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.eclipse.tracecompass.incubator.tsp.client.core.JSON;


/**
 * Map of styles specific to an output where values give hints on the style. The keys are strings that can be used in OutputElementStyle
 */
@JsonPropertyOrder({
  OutputStyleModel.JSON_PROPERTY_STYLES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-19T10:33:13.979273368-04:00[America/Toronto]", comments = "Generator version: 7.15.0")
public class OutputStyleModel {
  public static final String JSON_PROPERTY_STYLES = "styles";
  @javax.annotation.Nonnull
  private Map<String, OutputElementStyle> styles = new HashMap<>();

  public OutputStyleModel() { 
  }

  public OutputStyleModel styles(@javax.annotation.Nonnull Map<String, OutputElementStyle> styles) {
    this.styles = styles;
    return this;
  }

  public OutputStyleModel putStylesItem(String key, OutputElementStyle stylesItem) {
    if (this.styles == null) {
      this.styles = new HashMap<>();
    }
    this.styles.put(key, stylesItem);
    return this;
  }

  /**
   * Get styles
   * @return styles
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STYLES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Map<String, OutputElementStyle> getStyles() {
    return styles;
  }


  @JsonProperty(JSON_PROPERTY_STYLES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStyles(@javax.annotation.Nonnull Map<String, OutputElementStyle> styles) {
    this.styles = styles;
  }


  /**
   * Return true if this OutputStyleModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutputStyleModel outputStyleModel = (OutputStyleModel) o;
    return Objects.equals(this.styles, outputStyleModel.styles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(styles);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutputStyleModel {\n");
    sb.append("    styles: ").append(toIndentedString(styles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

