/*
 * Trace Server Protocol
 * Open source REST API for viewing and analyzing any type of logs or traces. Its goal is to provide models to populate views, graphs, metrics, and more to help extract useful information from traces, in a way that is more user-friendly and informative than huge text dumps.
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: tracecompass-dev@eclipse.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.eclipse.tracecompass.incubator.tsp.client.core.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.eclipse.tracecompass.incubator.tsp.client.core.model.Experiment;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.eclipse.tracecompass.incubator.tsp.client.core.JSON;


/**
 * ExperimentErrorResponse
 */
@JsonPropertyOrder({
  ExperimentErrorResponse.JSON_PROPERTY_DETAIL,
  ExperimentErrorResponse.JSON_PROPERTY_TITLE,
  ExperimentErrorResponse.JSON_PROPERTY_EXPERIMENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.15.0")
public class ExperimentErrorResponse {
  public static final String JSON_PROPERTY_DETAIL = "detail";
  @javax.annotation.Nullable
  private String detail;

  public static final String JSON_PROPERTY_TITLE = "title";
  @javax.annotation.Nonnull
  private String title;

  public static final String JSON_PROPERTY_EXPERIMENT = "experiment";
  @javax.annotation.Nonnull
  private Experiment experiment;

  public ExperimentErrorResponse() { 
  }

  public ExperimentErrorResponse detail(@javax.annotation.Nullable String detail) {
    this.detail = detail;
    return this;
  }

  /**
   * The optional human-readable explanation of the error with details helping the client to correct the error
   * @return detail
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDetail() {
    return detail;
  }


  @JsonProperty(JSON_PROPERTY_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetail(@javax.annotation.Nullable String detail) {
    this.detail = detail;
  }


  public ExperimentErrorResponse title(@javax.annotation.Nonnull String title) {
    this.title = title;
    return this;
  }

  /**
   * The short, human-readable description of the error
   * @return title
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(@javax.annotation.Nonnull String title) {
    this.title = title;
  }


  public ExperimentErrorResponse experiment(@javax.annotation.Nonnull Experiment experiment) {
    this.experiment = experiment;
    return this;
  }

  /**
   * Get experiment
   * @return experiment
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPERIMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Experiment getExperiment() {
    return experiment;
  }


  @JsonProperty(JSON_PROPERTY_EXPERIMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExperiment(@javax.annotation.Nonnull Experiment experiment) {
    this.experiment = experiment;
  }


  /**
   * Return true if this ExperimentErrorResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExperimentErrorResponse experimentErrorResponse = (ExperimentErrorResponse) o;
    return Objects.equals(this.detail, experimentErrorResponse.detail) &&
        Objects.equals(this.title, experimentErrorResponse.title) &&
        Objects.equals(this.experiment, experimentErrorResponse.experiment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detail, title, experiment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExperimentErrorResponse {\n");
    sb.append("    detail: ").append(toIndentedString(detail)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    experiment: ").append(toIndentedString(experiment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

