/*
 * Trace Server Protocol
 * Open source REST API for viewing and analyzing any type of logs or traces. Its goal is to provide models to populate views, graphs, metrics, and more to help extract useful information from traces, in a way that is more user-friendly and informative than huge text dumps.
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: tracecompass-dev@eclipse.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.eclipse.tracecompass.incubator.tsp.client.core.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.eclipse.tracecompass.incubator.tsp.client.core.JSON;


/**
 * An element model to be identified
 */
@JsonPropertyOrder({
  Element.JSON_PROPERTY_ENTRY_ID,
  Element.JSON_PROPERTY_DESTINATION_ID,
  Element.JSON_PROPERTY_TIME,
  Element.JSON_PROPERTY_DURATION,
  Element.JSON_PROPERTY_ELEMENT_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.15.0")
public class Element {
  public static final String JSON_PROPERTY_ENTRY_ID = "entryId";
  @javax.annotation.Nullable
  private Long entryId;

  public static final String JSON_PROPERTY_DESTINATION_ID = "destinationId";
  @javax.annotation.Nullable
  private Long destinationId;

  public static final String JSON_PROPERTY_TIME = "time";
  @javax.annotation.Nonnull
  private Long time;

  public static final String JSON_PROPERTY_DURATION = "duration";
  @javax.annotation.Nonnull
  private Long duration;

  /**
   * The type of element
   */
  public enum ElementTypeEnum {
    STATE(String.valueOf("STATE")),
    
    ANNOTATION(String.valueOf("ANNOTATION")),
    
    ARROW(String.valueOf("ARROW"));

    private String value;

    ElementTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ElementTypeEnum fromValue(String value) {
      for (ElementTypeEnum b : ElementTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ELEMENT_TYPE = "elementType";
  @javax.annotation.Nonnull
  private ElementTypeEnum elementType;

  public Element() { 
  }

  public Element entryId(@javax.annotation.Nullable Long entryId) {
    this.entryId = entryId;
    return this;
  }

  /**
   * Entry&#39;s unique ID (annotation, arrow)
   * @return entryId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTRY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEntryId() {
    return entryId;
  }


  @JsonProperty(JSON_PROPERTY_ENTRY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntryId(@javax.annotation.Nullable Long entryId) {
    this.entryId = entryId;
  }


  public Element destinationId(@javax.annotation.Nullable Long destinationId) {
    this.destinationId = destinationId;
    return this;
  }

  /**
   * Destination entry&#39;s unique ID (arrow)
   * @return destinationId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESTINATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getDestinationId() {
    return destinationId;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDestinationId(@javax.annotation.Nullable Long destinationId) {
    this.destinationId = destinationId;
  }


  public Element time(@javax.annotation.Nonnull Long time) {
    this.time = time;
    return this;
  }

  /**
   * Element&#39;s start time
   * @return time
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTime() {
    return time;
  }


  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTime(@javax.annotation.Nonnull Long time) {
    this.time = time;
  }


  public Element duration(@javax.annotation.Nonnull Long duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Element&#39;s duration
   * @return duration
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getDuration() {
    return duration;
  }


  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDuration(@javax.annotation.Nonnull Long duration) {
    this.duration = duration;
  }


  public Element elementType(@javax.annotation.Nonnull ElementTypeEnum elementType) {
    this.elementType = elementType;
    return this;
  }

  /**
   * The type of element
   * @return elementType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ELEMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ElementTypeEnum getElementType() {
    return elementType;
  }


  @JsonProperty(JSON_PROPERTY_ELEMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setElementType(@javax.annotation.Nonnull ElementTypeEnum elementType) {
    this.elementType = elementType;
  }


  /**
   * Return true if this Element object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Element element = (Element) o;
    return Objects.equals(this.entryId, element.entryId) &&
        Objects.equals(this.destinationId, element.destinationId) &&
        Objects.equals(this.time, element.time) &&
        Objects.equals(this.duration, element.duration) &&
        Objects.equals(this.elementType, element.elementType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entryId, destinationId, time, duration, elementType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Element {\n");
    sb.append("    entryId: ").append(toIndentedString(entryId)).append("\n");
    sb.append("    destinationId: ").append(toIndentedString(destinationId)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    elementType: ").append(toIndentedString(elementType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

